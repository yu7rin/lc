{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 public class MyQueue \{\
    \
    /** Initialize your data structure here. */ \
    Stack<Integer> st = new Stack<Integer>();\
    Stack<Integer> temp = new Stack<Integer>();\
    public MyQueue() \{\
       \
    \}\
    \
    /** Push element x to the back of queue. */\
    public void push(int x) \{\
        \
        while(!st.empty())\{\
            temp.push(st.pop());\
        \}\
        st.push(x);\
        while(!temp.empty())\{\
            st.push(temp.pop());\
        \}\
        \
    \}\
    \
    /** Removes the element from in front of queue and returns that element. */\
    public int pop() \{\
        \
        return st.pop();\
    \}\
    \
    /** Get the front element. */\
    public int peek() \{\
        \
        return st.peek();\
    \}\
    \
    /** Returns whether the queue is empty. */\
    public boolean empty() \{\
        \
        if(st.empty())\{\
            return true;\
        \}\
        return false;\
    \}\
\}\
\
/**\
 * Your MyQueue object will be instantiated and called as such:\
 * MyQueue obj = new MyQueue();\
 * obj.push(x);\
 * int param_2 = obj.pop();\
 * int param_3 = obj.peek();\
 * boolean param_4 = obj.empty();\
 */}