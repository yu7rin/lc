{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 /**\
 * Definition for a binary tree node.\
 * public class TreeNode \{\
 *     int val;\
 *     TreeNode left;\
 *     TreeNode right;\
 *     TreeNode(int x) \{ val = x; \}\
 * \}\
 */\
   public class Solution \{\
        int max = 0;\
\
    public int diameterOfBinaryTree(TreeNode root) \{\
        diameterOfBinaryTree1(root);\
        return max;\
        \
    \}\
    public int diameterOfBinaryTree1(TreeNode root) \{\
        if(root==null) return -1;\
        int left=diameterOfBinaryTree1(root.left);\
        left++;\
        int right=diameterOfBinaryTree1(root.right);\
        right++;\
        max = Math.max(max,right+left);\
        return Math.max(left,right);\
        \
    \}\
\}}