{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\b\fs24 \cf0 /**\
 * Definition for singly-linked list.\
 * public class ListNode \{\
 *     int val;\
 *     ListNode next;\
 *     ListNode(int x) \{ val = x; \}\
 * \}\
 */\
public class Solution \{\
    public ListNode reverseBetween(ListNode head, int m, int n) \{\
        ListNode next = null; \
        ListNode left = head;\
        ListNode right = null;\
        ListNode prev = new ListNode(0);\
        ListNode dummy = new ListNode(0);\
        ListNode post = null;\
        if(head == null || head.next == null)\{\
            return head;\
        \}\
        dummy.next = head;\
        prev = dummy;\
        for(int i=1;i < m;i++)\{\
            prev = prev.next;\
            left = left.next;\
        \}\
        right = left;\
        for(int i = m;i < n;i++)\{\
            right = right.next;\
        \}\
       \
        post = right.next;\
        right.next = null;\
        \
        \
        while(left != null)\{\
            next = left.next;\
            left.next = post;\
            post = left;\
            left = next;\
        \}\
        prev.next = post;\
\
    return dummy.next;\
        \
    \}\
\}}