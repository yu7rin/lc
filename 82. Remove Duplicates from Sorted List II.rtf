{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\b\fs24 \cf0 public class Solution \{\
    public ListNode deleteDuplicates(ListNode head) \{\
        ListNode Head = new ListNode(0);\
        Head.next = head;\
        if(head != null && head.next != null)\{\
            ListNode current = Head;\
            while(current.next != null && current.next.next != null)\{\
                if(current.next.val == current.next.next.val)\{\
                      while(current.next.next != null && current.next.next.val == current.next.val )\{\
                          current.next.next=current.next.next.next;\
                          \
                      \}current.next = current.next.next;\
                  \}else\{\
                      current=current.next;\
                  \}\
                    \
                \}\
            \} \
            return Head.next;\
        \}\
       \
    \}\
}