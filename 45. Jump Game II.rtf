{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 public class Solution \{\
  public int jump(int[] A) \{\
	int jumps = 0, curEnd = 0, curFarthest = 0;\
	for (int i = 0; i < A.length - 1; i++) \{\
		curFarthest = Math.max(curFarthest, i + A[i]);\
		if (i == curEnd) \{\
			jumps++;\
			curEnd = curFarthest;\
		\}\
	\}\
	return jumps;\
\
        // int n = nums.length-1;\
        // if(n<1) return 0;\
        // int[] F = new int[nums.length];\
        \
        // F[0]=0;\
        // for(int i=0 ; i <= n; i++ )\{\
        	\
        //     for(int j =(i+nums[i]>n)?n:i+nums[i]; j > i+1 ; j--)\{\
        //     	if(F[j] == 0)\{ \
        //     		F[j] = F[i]+1;\
        //     	\}else\{\
        //         F[j] =Math.min(F[i]+1,F[j]);\
                \
        //         \}\
        //         if(i+1 == n)\{\
                	\
        //             return F[n];\
        //         \}\
        //     \}\
            \
        // \}return F[n];\
            \
        // int jump =0;\
        // int n = nums.length-1;\
        // if(nums.length <= 1)\{\
        //     return 0;\
        // \}\
        // for(int i=0 ; i < n; i++ )\{\
        //     if(n == 0) return jump;\
\
        //     if(nums[i] >= n-i)\{\
        //         n = i;\
        //         i = -1;\
        //         jump++;\
        //     \}\
\
        // \}\
        // return jump;\
    \
        \
    \}\
\
\}}